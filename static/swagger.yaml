swagger: "2.0"
info:
  title: "Delta TMS - McLeod Integration Service API"
  description: "This is an API for the service that serves as an integration between Delta TMS
   Load board and McLEod system."
  version: "1.0.0"


securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"

#host: "api.example.com"
#basePath: "/v1"
#schemes:

tags:
  - name: "Authentication and Authorization"
    description: "Authentication and Authorization API Endpoints."
  - name: "Customers"
    description: "Customers API Endpoints"
  - name: "Orders"
    description: "Orders API Endpoints."


paths:
  /auth:
    post:
      tags:
        - "Authentication and Authorization"
      summary: "Authenticate client"
      description: "Authenticate client."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Client auth request object."
          required: true
          schema:
            $ref: "#/definitions/AuthClientRequest"
      responses:
        200:
          description: "Client successfully authenticated."
          schema:
            $ref: "#/definitions/AuthClientSuccessResponse"
        400:
          description: "No username and/or password."
          schema:
            $ref: "#/definitions/FailedAuth400Response"
        404:
          description: "Authentication Failed."
          schema:
            $ref: "#/definitions/FailedAuth401Response"

  /customers:
    post:
      tags:
        - "Customers"
      security:
        - Bearer: [ ]
      summary: "Create customer"
      description: "Create new customer."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create customer request object."
          required: true
          schema:
            $ref: "#/definitions/CreateCustomerRequest"
      responses:
        200:
          description: "Customer already exists."
          schema:
            $ref: "#/definitions/CreateCustomer200Success"
        201:
          description: "Customer successfully created."
          schema:
            $ref: "#/definitions/CreateCustomer201Success"
        400:
          description: "Create Customer Client Error."
          schema:
            $ref: "#/definitions/FailedCreateCustomer400Response"
        500:
          description: "Create Customer Server Error."
          schema:
            $ref: "#/definitions/FailedCreateCustomer500Response"

  /orders:
    post:
      tags:
        - "Orders"
      security:
        - Bearer: [ ]
      summary: "Create orders"
      description: "Create new order."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create order request object."
          required: true
          schema:
            $ref: "#/definitions/CreateOrderRequest"
      responses:
        201:
          description: "Order successfully created."
          schema:
            $ref: "#/definitions/CreateOrder201Success"
        400:
          description: "Create Order Client Error."
          schema:
            $ref: "#/definitions/FailedCreateOrder400Response"
        422:
          description: "Create Order Validation Client Error."
          schema:
            $ref: "#/definitions/FailedCreateOrder422Response"
        500:
          description: "Create Order Server Error."
          schema:
            $ref: "#/definitions/FailedCreateOrder500Response"

definitions:
  AuthClientRequest:
    type: "object"
    required:
      - "username"
      - "password"
    properties:
      username:
        type: "string"
        example: "GoodUser"
      password:
        type: "string"
        example: "$tr0ngPwd"

  AuthClientSuccessResponse:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 200
      message:
        type: "string"
        example: "Authentication Successful."
      success:
        type: "boolean"
        example: true
      access_token:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcwMDQ3NTcyMiwianRpIjoiMzljNWMyNzctZTYwYi00ZmFhLTkzODgtZmUyMWUxZTQ0Nzc2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6Im9icmFkb3ZpYy5pdEBnbWFpbC5jb20iLCJuYmYiOjE3MDA0NzU3MjIsImV4cCI6MTcwMDQ3NjYyMn0.xAnXS-xF6oSV8W9MGuEHGOQPJH94i024xt8HbahRudQ"

  FailedAuth400Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 400
      message:
        type: "string"
        example: "Please provide username and password."
      success:
        type: "boolean"
        example: false

  FailedAuth401Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 401
      message:
        type: "string"
        example: "Authentication failed."
      success:
        type: "boolean"
        example: false

  CreateCustomerRequest:
    type: "object"
    required:
      - "name"
    properties:
      test:
        type: "boolean"
        example: false
      name:
        type: "string"
        example: "Test Customer"

  CreateCustomer200Success:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 200
      message:
        type: "string"
        example: "Customer: Test Customer already exists."
      success:
        type: "boolean"
        example: true
      external_customer_id:
        type: "string"
        example: "TESCUST"

  CreateCustomer201Success:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 201
      message:
        type: "string"
        example: "Customer: Test Customer successfully saved."
      success:
        type: "boolean"
        example: true
      external_customer_id:
        type: "string"
        example: "TESCUST"

  FailedCreateCustomer400Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 400
      message:
        type: "string"
        example: "Please provide name for a customer."
      success:
        type: "boolean"
        example: false

  FailedCreateCustomer500Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 500
      message:
        type: "string"
        example: "Unable to save customer: Test Customer"
      success:
        type: "boolean"
        example: false

  CreateOrderRequest:
    type: "object"
    required:
      - "external_customer_id"
      - "mode"
      - "billing_number"
      - "pickup_list"
      - "delivery_list"
    properties:
      test:
        type: "boolean"
        example: false
      external_customer_id:
        type: "string"
        example: "TESTCUST"
      mode:
        type: "string"
        example: "Van 53"
      billing_number:
        type: "string"
        example: "1231234313"
      pickup_list:
        type: "array"
        items:
          $ref: "#/definitions/Pickup"
      delivery_list:
        type: "array"
        items:
          $ref: "#/definitions/Delivery"

  Pickup:
    type: "object"
    required:
      - "address"
      - "city"
      - "state"
      - "country"
      - "zip_code"
      - "est_pickup_date_time"
      - "weight"
      - "package_type"
      - "package_count"
      - "product_type"
    properties:
      address:
        type: "string"
        example: "1555 Lincoln Ave"
      city:
        type: "string"
        example: "Chicago"
      state:
        type: "string"
        example: "IL"
      country:
        type: "string"
        example: "USA"
      zip_code:
        type: "string"
        example: "60601"
      est_pickup_date_time:
        type: "string"
        example: "2023-07-09 11:00:00"
      weight:
        type: number
        example: 42000.50
      package_type:
        type: "string"
        example: "Pallets"
      package_count:
        type: integer
        example: 24
      product_type:
        type: "string"
        example: "Electronics"

  Delivery:
    type: "object"
    required:
      - "address"
      - "city"
      - "state"
      - "country"
      - "zip_code"
      - "est_deliver_date_time"
    properties:
      address:
        type: "string"
        example: "606 W Van Alden Ave"
      city:
        type: "string"
        example: "Chicago"
      state:
        type: "string"
        example: "IL"
      country:
        type: "string"
        example: "USA"
      zip_code:
        type: "string"
        example: "60016"
      est_deliver_date_time:
        type: "string"
        example: "2023-07-12 11:00:00"

  FailedCreateOrder400Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 400
      message:
        type: "string"
        example: "Please provide required info."
      success:
        type: "boolean"
        example: false

  FailedCreateOrder422Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 422
      message:
        type: "string"
        example: "Pickup ZIP Code for Chicago, IL is invalid."
      success:
        type: "boolean"
        example: false

  CreateOrder201Success:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 201
      message:
        type: "string"
        example: "Order saved successfully."
      success:
        type: "boolean"
        example: true
      mc_leod_number:
        type: "string"
        example: "123401"

  FailedCreateOrder500Response:
    type: "object"
    properties:
      status_code:
        type: "integer"
        example: 500
      message:
        type: "string"
        example: "Failed to save order.\nError:\n{str(e)}"
      success:
        type: "boolean"
        example: false

